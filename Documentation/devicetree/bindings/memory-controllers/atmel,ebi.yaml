# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/memory-controllers/atmel,ebi.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Atmel External Bus Interface (EBI)

maintainers:
  - Boris Brezillon <bbrezillon@kernel.org>
  - Krzysztof Kozlowski <krzk@kernel.org>

description:
  The External Bus Interface (EBI) controller is a bus where you can connect
  asynchronous (NAND, NOR, SRAM, ....) and synchronous memories (SDR/DDR
  SDRAMs).  The EBI provides a glue-less interface to asynchronous memories
  through the SMC (Static Memory Controller).

properties:
  $nodename:
    pattern: "^memory-controller@[0-9a-f]+$"

  compatible:
    enum:
      - atmel,at91sam9260-ebi
      - atmel,at91sam9261-ebi
      - atmel,at91sam9263-ebi0
      - atmel,at91sam9263-ebi1
      - atmel,at91sam9rl-ebi
      - atmel,at91sam9g45-ebi
      - atmel,at91sam9x5-ebi
      - atmel,sama5d3-ebi
      - microchip,sam9x60-ebi

  "#address-cells":
    const: 2

  "#size-cells":
    const: 1

  reg:
    maxItems: 8
    description:
      This property might contain several entries if the EBI
      memory range is not contiguous

  clocks:
    maxItems: 1

  ranges:
    minItems: 1

patternProperties:
  "@[0-3],[a-f0-9]+$":
    type: object
    description: |
      The Children device nodes are representing device connected to the EBI
      bus.

    properties:
      compatible: true

      reg:
        items:
          - items:
              - description: |
                  Chip-select ID, as in the parent range property.
                minimum: 0
                maximum: 2
              - description: |
                  Offset of the memory region requested by the device.
              - description: |
                  Length of the memory region requested by the device.

      atmel,smc-bus-width:
        descruption: width of the asynchronous device's data bus
        $ref: /schemas/types.yaml#/definitions/uint32
        enum: [8, 16, 32]
        default: 8
        
      atmel,smc-byte-access-type:
        description: see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/string
        enum:
          - write
          - select
        default: select
        
      atmel,smc-read-mode:
        description: see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/string
        enum:
          - nrd
          - ncs
        default: ncs

      atmel,smc-write-mode:
        description: see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/string
        enum:
          - nwe
          - ncs
        default: ncs
        
      atmel,smc-exnw-mode:
        description: see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/string
        enum:
          - disabled
          - frozen
          - ready
        default: disabled

      atmel,smc-page-mode:
        description: enable page mode if present with given page size
        $ref: /schemas/types.yaml#/definitions/uint32
        enum: [4, 8, 16, 32]

      atmel,smc-tdf-mode:
        description: |
          When set to "optimized" the data float time is optimized depending on
          the next device being accessed (next device setup time is subtracted
          to the current device data float time).
        $ref: /schemas/types.yaml#/definitions/string
        enum:
          - normal
          - optimized
        default: normal

      atmel,smc-ncs-rd-setup-ns:
        description: timing in nanoseconds, see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/uint32

      atmel,smc-nrd-setup-ns:
        description: timing in nanoseconds, see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/uint32

      atmel,smc-ncs-wr-setup-ns:
        description: timing in nanoseconds, see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/uint32

      atmel,smc-nwe-setup-ns:
        description: timing in nanoseconds, see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/uint32
          
      atmel,smc-ncs-rd-pulse-ns:
        description: timing in nanoseconds, see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/uint32

      atmel,smc-nrd-pulse-ns:
        description: timing in nanoseconds, see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/uint32

      atmel,smc-ncs-wr-pulse-ns:
        description: timing in nanoseconds, see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/uint32

      atmel,smc-nwe-pulse-ns:
        description: timing in nanoseconds, see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/uint32

      atmel,smc-nwe-cycle-ns:
        description: timing in nanoseconds, see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/uint32

      atmel,smc-nrd-cycle-ns:
        description: timing in nanoseconds, see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/uint32

      atmel,smc-tdf-ns:
        description: timing in nanoseconds, see Atmel datasheet
        $ref: /schemas/types.yaml#/definitions/uint32

    required:
      - reg

    dependencies:
      atmel,smc-bus-width: ['atmel,smc-ncs-rd-setup-ns', 'atmel,smc-nrd-setup-ns',
                            'atmel,smc-ncs-wr-setup-ns', 'atmel,smc-nwe-setup-ns',
                            'atmel,smc-ncs-rd-pulse-ns', 'atmel,smc-nrd-pulse-ns',
                            'atmel,smc-ncs-wr-pulse-ns', 'atmel,smc-nwe-pulse-ns'
                            'atmel,smc-nwe-cycle-ns', 'atmel,smc-nrd-cycle-ns',
                            'atmel,smc-tdf-ns']

required:
  - compatible
  - reg
  - clocks
  - "#address-cells"
  - "#size-cells"
  - ranges

additionalProperties: false

examples:
  - |
    memory-controller@10000000 {
        compatible = "atmel,sama5d3-ebi";
        #address-cells = <2>;
        #size-cells = <1>;
        atmel,smc = <&hsmc>;
        atmel,matrix = <&matrix>;
        reg = <0x10000000 0x10000000>,
              <0x40000000 0x30000000>;
        ranges = <0x0 0x0 0x10000000 0x10000000
                  0x1 0x0 0x40000000 0x10000000
                  0x2 0x0 0x50000000 0x10000000
                  0x3 0x0 0x60000000 0x10000000>;
        clocks = <&mck>;
        
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_ebi_addr>;
        
        flash@0,0 {
            compatible = "cfi-flash";
            #address-cells = <1>;
            #size-cells = <1>;
            reg = <0x0 0x0 0x1000000>;
            bank-width = <2>;
            
            atmel,smc-read-mode = "nrd";
            atmel,smc-write-mode = "nwe";
            atmel,smc-bus-width = <16>;
            atmel,smc-ncs-rd-setup-ns = <0>;
            atmel,smc-ncs-wr-setup-ns = <0>;
            atmel,smc-nwe-setup-ns = <8>;
            atmel,smc-nrd-setup-ns = <16>;
            atmel,smc-ncs-rd-pulse-ns = <84>;
            atmel,smc-ncs-wr-pulse-ns = <84>;
            atmel,smc-nrd-pulse-ns = <76>;
            atmel,smc-nwe-pulse-ns = <76>;
            atmel,smc-nrd-cycle-ns = <107>;
            atmel,smc-nwe-cycle-ns = <84>;
            atmel,smc-tdf-ns = <16>;
        };
    };
